import React, { useState, useEffect } from 'react';
import { useForm } from 'react-hook-form';
import axios from 'axios';
import { Upload, Send, CheckCircle, AlertCircle } from 'lucide-react';
import './App.css';

interface Position {
  id: number;
  title: string;
  department: string;
  description: string;
  requirements: string;
}

interface ApplicationForm {
  first_name: string;
  last_name: string;
  email: string;
  phone: string;
  position: string;
  experience_years: number;
  education: string;
  skills: string;
  cover_letter: string;
}

// API base URL
const API_BASE_URL = process.env.NODE_ENV === 'production' 
  ? 'https://your-vercel-app.vercel.app/api' 
  : '/api';

function App() {
  const [positions, setPositions] = useState<Position[]>([]);
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitSuccess, setSubmitSuccess] = useState(false);
  const [applicationId, setApplicationId] = useState('');
  const [error, setError] = useState('');

  const {
    register,
    handleSubmit,
    formState: { errors },
    reset
  } = useForm<ApplicationForm>();

  useEffect(() => {
    fetchPositions();
  }, []);

  const fetchPositions = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/positions`);
      setPositions(response.data);
    } catch (error) {
      console.error('Error fetching positions:', error);
    }
  };

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      setSelectedFile(file);
    }
  };

  const handleDragOver = (event: React.DragEvent) => {
    event.preventDefault();
    event.currentTarget.classList.add('dragover');
  };

  const handleDragLeave = (event: React.DragEvent) => {
    event.preventDefault();
    event.currentTarget.classList.remove('dragover');
  };

  const handleDrop = (event: React.DragEvent) => {
    event.preventDefault();
    event.currentTarget.classList.remove('dragover');
    
    const files = event.dataTransfer.files;
    if (files.length > 0) {
      setSelectedFile(files[0]);
    }
  };

  const onSubmit = async (data: ApplicationForm) => {
    setIsSubmitting(true);
    setError('');

    try {
      const formData = new FormData();
      
      // Add form data
      Object.keys(data).forEach(key => {
        formData.append(key, data[key as keyof ApplicationForm].toString());
      });

      // Add file if selected
      if (selectedFile) {
        formData.append('resume', selectedFile);
      }

      const response = await axios.post(`${API_BASE_URL}/applications`, formData, {
        headers: {
          'Content-Type': 'multipart/form-data',
        },
      });

      setApplicationId(response.data.application_id);
      setSubmitSuccess(true);
      reset();
      setSelectedFile(null);
      
    } catch (error: any) {
      setError(error.response?.data?.error || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£');
    } finally {
      setIsSubmitting(false);
    }
  };

  if (submitSuccess) {
    return (
      <div className="container">
        <div className="header">
          <h1>üéâ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h1>
          <p>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö DYGS</p>
        </div>
        
        <div className="card">
          <div className="success-message">
            <CheckCircle size={24} style={{ marginRight: '8px' }} />
            ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
          </div>
          
          <div style={{ marginBottom: '20px' }}>
            <strong>Application ID:</strong> {applicationId}
          </div>
          
          <p style={{ marginBottom: '20px' }}>
            ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏£‡∏∞‡∏ö‡∏∏‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 3-5 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£
          </p>
          
          <button 
            className="btn btn-primary"
            onClick={() => {
              setSubmitSuccess(false);
              setApplicationId('');
            }}
          >
            ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="container">
      <div className="header">
        <h1>üöõ DYGS Logistics</h1>
        <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå - ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ LINE OA</p>
      </div>

      <div className="card">
        <h2 style={{ marginBottom: '24px', color: '#495057' }}>
          üìã ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô
        </h2>

        {error && (
          <div className="error-message">
            <AlertCircle size={20} style={{ marginRight: '8px' }} />
            {error}
          </div>
        )}

        <form onSubmit={handleSubmit(onSubmit)}>
          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>
            <div className="form-group">
              <label className="form-label">‡∏ä‡∏∑‡πà‡∏≠ *</label>
              <input
                type="text"
                className="form-input"
                {...register('first_name', { required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠' })}
                placeholder="‡∏ä‡∏∑‡πà‡∏≠"
              />
              {errors.first_name && (
                <span style={{ color: '#dc3545', fontSize: '14px' }}>
                  {errors.first_name.message}
                </span>
              )}
            </div>

            <div className="form-group">
              <label className="form-label">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• *</label>
              <input
                type="text"
                className="form-input"
                {...register('last_name', { required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•' })}
                placeholder="‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
              />
              {errors.last_name && (
                <span style={{ color: '#dc3545', fontSize: '14px' }}>
                  {errors.last_name.message}
                </span>
              )}
            </div>
          </div>

          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', marginBottom: '20px' }}>
            <div className="form-group">
              <label className="form-label">‡∏≠‡∏µ‡πÄ‡∏°‡∏• *</label>
              <input
                type="email"
                className="form-input"
                {...register('email', { 
                  required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•',
                  pattern: {
                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,
                    message: '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
                  }
                })}
                placeholder="example@email.com"
              />
              {errors.email && (
                <span style={{ color: '#dc3545', fontSize: '14px' }}>
                  {errors.email.message}
                </span>
              )}
            </div>

            <div className="form-group">
              <label className="form-label">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå *</label>
              <input
                type="tel"
                className="form-input"
                {...register('phone', { 
                  required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå',
                  pattern: {
                    value: /^[0-9-+\s()]+$/,
                    message: '‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
                  }
                })}
                placeholder="081-234-5678"
              />
              {errors.phone && (
                <span style={{ color: '#dc3545', fontSize: '14px' }}>
                  {errors.phone.message}
                </span>
              )}
            </div>
          </div>

          <div className="form-group">
            <label className="form-label">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£ *</label>
            <select
              className="form-select"
              {...register('position', { required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á' })}
            >
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</option>
              {positions.map((position) => (
                <option key={position.id} value={position.title}>
                  {position.title} - {position.department}
                </option>
              ))}
            </select>
            {errors.position && (
              <span style={{ color: '#dc3545', fontSize: '14px' }}>
                {errors.position.message}
              </span>
            )}
          </div>

          <div className="form-group">
            <label className="form-label">‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (‡∏õ‡∏µ) *</label>
            <input
              type="number"
              className="form-input"
              {...register('experience_years', { 
                required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
                min: { value: 0, message: '‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏õ‡∏µ' },
                max: { value: 50, message: '‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 50 ‡∏õ‡∏µ' }
              })}
              placeholder="0"
              min="0"
              max="50"
            />
            {errors.experience_years && (
              <span style={{ color: '#dc3545', fontSize: '14px' }}>
                {errors.experience_years.message}
              </span>
            )}
          </div>

          <div className="form-group">
            <label className="form-label">‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ *</label>
            <input
              type="text"
              className="form-input"
              {...register('education', { required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤' })}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ ‡∏™‡∏≤‡∏Ç‡∏≤‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢..."
            />
            {errors.education && (
              <span style={{ color: '#dc3545', fontSize: '14px' }}>
                {errors.education.message}
              </span>
            )}
          </div>

          <div className="form-group">
            <label className="form-label">‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ *</label>
            <textarea
              className="form-textarea"
              {...register('skills', { required: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ' })}
              placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©, Microsoft Office, ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡∏°, ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤..."
            />
            {errors.skills && (
              <span style={{ color: '#dc3545', fontSize: '14px' }}>
                {errors.skills.message}
              </span>
            )}
          </div>

          <div className="form-group">
            <label className="form-label">‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô (Cover Letter)</label>
            <textarea
              className="form-textarea"
              {...register('cover_letter')}
              placeholder="‡∏ö‡∏≠‡∏Å‡πÄ‡∏£‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ñ‡∏∏‡∏ì ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤ ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡∏°‡∏≤‡∏™‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÑ‡∏î‡πâ..."
            />
          </div>

          <div className="form-group">
            <label className="form-label">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î Resume/CV</label>
            <div
              className="file-upload"
              onDragOver={handleDragOver}
              onDragLeave={handleDragLeave}
              onDrop={handleDrop}
              onClick={() => document.getElementById('resume-upload')?.click()}
            >
              <Upload size={48} style={{ marginBottom: '16px', color: '#6c757d' }} />
              <p style={{ marginBottom: '8px', color: '#495057' }}>
                {selectedFile ? selectedFile.name : '‡∏Ñ‡∏•‡∏¥‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà'}
              </p>
              <p style={{ fontSize: '14px', color: '#6c757d' }}>
                ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå PDF, DOC, DOCX, JPG, PNG (‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB)
              </p>
              <input
                id="resume-upload"
                type="file"
                accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"
                onChange={handleFileChange}
                style={{ display: 'none' }}
              />
            </div>
          </div>

          <button
            type="submit"
            className="btn btn-primary"
            disabled={isSubmitting}
            style={{ width: '100%', marginTop: '20px' }}
          >
            {isSubmitting ? (
              <>
                <div className="loading" style={{ marginRight: '8px' }}></div>
                ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£...
              </>
            ) : (
              <>
                <Send size={20} style={{ marginRight: '8px' }} />
                ‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô
              </>
            )}
          </button>
        </form>
      </div>

      <div className="card">
        <h3 style={{ marginBottom: '16px', color: '#495057' }}>
          üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤
        </h3>
        <p style={{ marginBottom: '8px' }}>
          <strong>‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó DYGS Logistics</strong>
        </p>
        <p style={{ marginBottom: '8px' }}>
          üìß Email: hr@dygs.co.th
        </p>
        <p style={{ marginBottom: '8px' }}>
          üì± ‡πÇ‡∏ó‡∏£: 02-123-4567
        </p>
        <p style={{ marginBottom: '8px' }}>
          üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: 123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110
        </p>
        <p style={{ fontSize: '14px', color: '#6c757d' }}>
          * ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE OA ‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        </p>
      </div>
    </div>
  );
}

export default App; 